{"version":3,"sources":["components/input.jsx","components/item.jsx","components/list.jsx","App.js","serviceWorker.js","index.js"],"names":["Input","handleSubmit","e","doSubmit","console","log","preventDefault","this","props","item","onChange","onSubmit","className","type","name","placeholder","value","task","priority","_id","Component","Item","data","onEdit","onDelete","onClick","List","items","onSort","onDeleteAll","map","it","key","App","state","error","schema","Joi","string","required","label","handleChange","currentTarget","setState","newItem","index","findIndex","push","uuid","handleEdit","handleSort","sort","a","b","reverse","handleDelete","t","filter","handleDeleteAll","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c95d653a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Input extends Component {\r\n  handleSubmit = (e, doSubmit) => {\r\n    console.log(\"input: handleSubmit\", e);\r\n    e.preventDefault();\r\n    doSubmit();\r\n  };\r\n\r\n  render() {\r\n    const { item, onChange, onSubmit } = this.props;\r\n    return (\r\n      <div className=\"card card-body my-3\">\r\n        <form\r\n          className=\"form-group\"\r\n          onSubmit={(e) => this.handleSubmit(e, onSubmit)}\r\n        >\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <div className=\"input-group-text bg-primary text-white\">\r\n                <i className=\"fas fa-book\"></i>\r\n              </div>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"task\"\r\n              className=\"form-control mx-2\"\r\n              placeholder=\"Add a task\"\r\n              value={item ? item.task : \"\"}\r\n              onChange={onChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"priority\"\r\n              className=\"form-control mx-2\"\r\n              placeholder=\"Add priority\"\r\n              value={item ? item.priority : \"\"}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          <button\r\n            className={\r\n              item && item._id\r\n                ? \"btn btn-block btn-success mt-3\"\r\n                : \"btn btn-block btn-primary mt-3\"\r\n            }\r\n            type=\"submit\"\r\n          >\r\n            {item && item._id ? \"Edit\" : \"Add\"}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Item extends Component {\r\n  render() {\r\n    const { data, onEdit, onDelete } = this.props;\r\n    return (\r\n      <li className=\"list-group-item d-flex justify-content-between my-2\">\r\n        <div>\r\n          <input type=\"checkbox\" />\r\n          <b className=\"ml-5\">{data.priority}</b>\r\n        </div>\r\n        <h6>{data.task}</h6>\r\n        <div>\r\n          <span className=\"mx-2 text-success\">\r\n            <i className=\"fas fa-pen\" onClick={() => onEdit(data)} />\r\n          </span>\r\n          <span className=\"mx-2 text-danger\">\r\n            <i className=\"fas fa-trash\" onClick={() => onDelete(data)} />\r\n          </span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React, { Component } from \"react\";\r\nimport Item from \"./item\";\r\n\r\nclass List extends Component {\r\n  render() {\r\n    const { items, onEdit, onSort, onDelete, onDeleteAll } = this.props;\r\n    return (\r\n      <ul className=\"list-group my-3\">\r\n        <h3 className=\"text-center\">Todo List</h3>\r\n        {items.map((it) => (\r\n          <Item key={it._id} data={it} onEdit={onEdit} onDelete={onDelete} />\r\n        ))}\r\n        <div className=\"d-flex\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary mt-3 mr-2\"\r\n            onClick={() => onSort(\"task\")}\r\n          >\r\n            Sort Alpha\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-primary mt-3 mr-2\"\r\n            onClick={() => onSort(\"priority\")}\r\n          >\r\n            Sort Prio\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-block btn-danger mt-3 ml-2\"\r\n            onClick={onDeleteAll}\r\n          >\r\n            Delete All\r\n          </button>\r\n        </div>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./components/input\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport List from \"./components/list\";\r\nimport \"./App.css\";\r\nimport uuid from \"react-uuid\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    items: [\r\n      { _id: \"1\", task: \"sajib\", priority: 0 },\r\n      { _id: \"2\", task: \"shahriar\", priority: 0 },\r\n      { _id: \"3\", task: \"todo\", priority: 0 },\r\n      { _id: \"4\", task: \"react\", priority: 0 },\r\n    ],\r\n    item: null,\r\n    error: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    task: Joi.string().required().label(\"Task\"),\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const item = { ...this.state.item };\r\n    console.log(\"handle cange: \", e.currentTarget);\r\n    const { name, value } = e.currentTarget;\r\n    if (e.currentTarget) item[name] = value;\r\n    this.setState({ item });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    console.log(\"App : handleSubmit\");\r\n    const newItem = { ...this.state.item };\r\n    //console.log(\"handleSubmit\", newItem);\r\n    const items = [...this.state.items];\r\n    if (newItem._id) {\r\n      const index = items.findIndex((item, index) => {\r\n        if (item._id === newItem._id) return true;\r\n      });\r\n      if (index !== -1) items[index] = newItem;\r\n      else items.push(newItem);\r\n    } else {\r\n      newItem._id = uuid();\r\n      items.push(newItem);\r\n    }\r\n\r\n    //console.log(\"New Items: \", items);\r\n    this.setState({ items, item: null });\r\n  };\r\n\r\n  handleEdit = (item) => {\r\n    console.log(\"handle edit\", item);\r\n    this.setState({ item });\r\n  };\r\n\r\n  handleSort = (key) => {\r\n    const items = [...this.state.items];\r\n    items.sort((a, b) => {\r\n      if (a[key] < b[key]) return -1;\r\n      return +1;\r\n    });\r\n    if (key === \"priority\") items.reverse();\r\n    this.setState({ items });\r\n  };\r\n\r\n  handleDelete = (t) => {\r\n    const items = this.state.items.filter((it) => it._id !== t._id);\r\n    this.setState({ items });\r\n    if (this.state.item === t) {\r\n      const item = { ...this.state.item };\r\n      item._id = null;\r\n      this.setState({ item });\r\n    }\r\n  };\r\n\r\n  handleDeleteAll = () => {\r\n    //console.log(\"HandleDeleteAll\");\r\n    const items = [];\r\n    this.setState({ items });\r\n    if (this.state.item) {\r\n      const item = { ...this.state.item };\r\n      item._id = null;\r\n      this.setState({ item });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(\"render\", this.state.items);\r\n    return (\r\n      <main className=\"container\">\r\n        <div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h1 className=\"text-center\">TODO</h1>\r\n              <Input\r\n                item={this.state.item}\r\n                onChange={this.handleChange}\r\n                onSubmit={this.handleSubmit}\r\n              />\r\n              <List\r\n                items={this.state.items}\r\n                onEdit={this.handleEdit}\r\n                onSort={this.handleSort}\r\n                onDelete={this.handleDelete}\r\n                onDeleteAll={this.handleDeleteAll}\r\n              ></List>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}